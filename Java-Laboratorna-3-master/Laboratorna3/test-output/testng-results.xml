<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="1" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="66" started-at="2017-10-09T07:54:43Z" finished-at="2017-10-09T07:54:44Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="66" started-at="2017-10-09T07:54:43Z" finished-at="2017-10-09T07:54:44Z">
      <class name="BasketTest">
        <test-method status="PASS" signature="start()[pri:0, instance:BasketTest@6cc4c815]" name="start" is-config="true" duration-ms="10" started-at="2017-10-09T10:54:43Z" finished-at="2017-10-09T10:54:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="findSomeProductsTest(Basket, java.lang.String, int)[pri:0, instance:BasketTest@6cc4c815]" name="findSomeProductsTest" duration-ms="7" started-at="2017-10-09T10:54:43Z" data-provider="findSomeProductsProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@61fd745]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[milk]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findSomeProductsTest -->
        <test-method status="PASS" signature="findSomeProductsTest(Basket, java.lang.String, int)[pri:0, instance:BasketTest@6cc4c815]" name="findSomeProductsTest" duration-ms="1" started-at="2017-10-09T10:54:44Z" data-provider="findSomeProductsProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6d391e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cucumber]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findSomeProductsTest -->
        <test-method status="PASS" signature="findTheCheapestProductTest(Basket, java.util.List)[pri:0, instance:BasketTest@6cc4c815]" name="findTheCheapestProductTest" duration-ms="3" started-at="2017-10-09T10:54:44Z" data-provider="findTheCheapestProductProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6fcd56f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[This is milk ,which was created on 2017-03-03]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findTheCheapestProductTest -->
        <test-method status="PASS" signature="findTheMostExpensiveProductTest(Basket, java.util.List)[pri:0, instance:BasketTest@6cc4c815]" name="findTheMostExpensiveProductTest" duration-ms="1" started-at="2017-10-09T10:54:44Z" data-provider="findTheMostExpensiveProductProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6fcd56f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[This is potato ,which was created on 2017-01-01]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findTheMostExpensiveProductTest -->
        <test-method status="PASS" signature="getAmountOfProductsTest(Basket, int)[pri:0, instance:BasketTest@6cc4c815]" name="getAmountOfProductsTest" duration-ms="2" started-at="2017-10-09T10:54:44Z" data-provider="getAmountOfProductProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@61fd745]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAmountOfProductsTest -->
        <test-method status="PASS" signature="getAmountOfProductsTest(Basket, int)[pri:0, instance:BasketTest@6cc4c815]" name="getAmountOfProductsTest" duration-ms="1" started-at="2017-10-09T10:54:44Z" data-provider="getAmountOfProductProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6d391e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAmountOfProductsTest -->
        <test-method status="PASS" signature="getAmountOfProductsTest(Basket, int)[pri:0, instance:BasketTest@6cc4c815]" name="getAmountOfProductsTest" duration-ms="1" started-at="2017-10-09T10:54:44Z" data-provider="getAmountOfProductProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6fcd56f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAmountOfProductsTest -->
        <test-method status="PASS" signature="sortProductsByPriceNormanlTest(Basket, java.util.List)[pri:0, instance:BasketTest@6cc4c815]" name="sortProductsByPriceNormanlTest" duration-ms="1" started-at="2017-10-09T10:54:44Z" data-provider="sortProductsByPriceNormalProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6fcd56f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[This is milk ,which was created on 2017-03-03, This is cucmber ,which was created on 2017-04-04, This is potato ,which was created on 2017-01-01]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortProductsByPriceNormanlTest -->
        <test-method status="PASS" signature="sortProductsByPriceReverseTest(Basket, java.util.List)[pri:0, instance:BasketTest@6cc4c815]" name="sortProductsByPriceReverseTest" duration-ms="2" started-at="2017-10-09T10:54:44Z" data-provider="sortProductsByPriceReverseProvider" finished-at="2017-10-09T10:54:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basket@6fcd56f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[This is potato ,which was created on 2017-01-01, This is cucmber ,which was created on 2017-04-04, This is milk ,which was created on 2017-03-03]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortProductsByPriceReverseTest -->
      </class> <!-- BasketTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
